version: 'yml-{build}'
os: Windows Server 2012
cache:
   - '%USERPROFILE%\.gradle\caches\'
   - '%USERPROFILE%\.gradle\wrapper\'
environment:
   matrix:
   - JAVA_HOME: C:\Program Files (x86)\Java\jdk1.8.0
     JFX: -PnoExternalJavafx
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\jdk9
     JFX: -PnoExternalJavafx
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\jdk10
     JFX: -PnoExternalJavafx
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\jdk11
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\jdk12
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\jdk13
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\openjdk11
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\openjdk-latest
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\zulu11
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: C:\Program Files\Java\zulu
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
   - JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
     JFX:
     APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
init:
   - cmd: 'git config --global core.autocrlf true'
   - ps: |
           Add-Type -AssemblyName System.IO.Compression.FileSystem
           IF ("$ENV:JAVA_HOME" -eq "C:\Program Files\Java\openjdk11") {
              & choco install openjdk11
           }
           IF ("$ENV:JAVA_HOME" -eq "C:\Program Files\Java\openjdk-latest") {
              & choco install openjdk
           }
           IF ("$ENV:JAVA_HOME" -eq "C:\Program Files\Java\zulu11") {
              & choco install zulu11
           }
           IF ("$ENV:JAVA_HOME" -eq "C:\Program Files\Java\zulu-latest") {
              & choco install zulu
           }
   - cmd: refreshenv
build_script:
   - cmd: './gradlew --no-daemon %JFX% -PlocalPublishLocation=file:///C:/projects/fxfightstage/maven/ assemble uploadArchives'
   - sh: './gradlew --no-daemon $JFX -PlocalPublishLocation=file:////home/appveyor/projects/fxfightstage/maven/ assemble uploadArchives'
test_script:
   - cmd: './gradlew --no-daemon --warning-mode all %JFX% check'
   - sh: 'xvfb-run ./gradlew --no-daemon --warning-mode all $JFX check'
artifacts:
   - path: ./maven
     name: maven
   - path: ./core/build/libs/*.tar.gz
     name: core_libs
   - path: ./demo/build/libs/*.tar.gz
     name: demo_libs
   - path: ./samples/build/libs/*.tar.gz
     name: samples_libs
   - path: ./samples/build/distributions/FxFightStageSamples.jar
     name: samples_fatjar
   - path: ./samples/build/distributions/jlink/
     name: samples_jlink
